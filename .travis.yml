language: python

cache: pip

# for dbus install to work see https://travis-ci.community/t/dbus-python-dependency-any-version-does-not-work/2146/11
dist: xenial
#addons:
#  apt:
#    packages:
#      - libdbus-1-dev
#      - libdbus-glib-1-dev

matrix:
  fast_finish: true
  include:
    - python: 2.7
    - python: 3.5.3
    - python: 3.5
    - python: 3.6
    - python: 3.7

env:
  global:
  - GH_REF: git@github.com:smarie/python-odsclient.git

before_install:
  # (a) linux dependencies
  - sudo apt-get install pandoc
  - sudo apt-get install ant
  - sudo apt-get install ant-optional  # for junitreports

install:
  - pip list
  - pip install six setuptools_scm  # apparently python 2 requires this
  - python ci_tools/py_install.py pip ci_tools/requirements-pip.txt
  # this does not work anymore on python 2 so lets only do it when needed
  - if [ "${TRAVIS_PYTHON_VERSION}" = "3.5" ]; then pip install mkdocs-material mkdocs; fi;
  # travis-specific installs
  - pip install PyGithub  # for ci_tools/github_release.py
  - pip install codecov  # See https://github.com/codecov/example-python.
  - pip list
  # for keyring on travis: install this very unsecure (text file) but working backend, just for the tests.
  - pip install keyrings.alt
#  - pip install dbus-python
#  - pip install cryptography pycrypto
#  - if [ "${TRAVIS_PYTHON_VERSION}" = "2.7" ]; then pip install "SecretStorage<3"; else pip install SecretStorage; fi;
#  - pip install SecretStorage-Setup
#  - ss-setup status -v

script:
#  - coverage run tests.py
  - pip install .
  - python -c "import os; os.chdir('..'); import odsclient"
# ***tests***
#  - coverage run tests.py
#  - pytest --junitxml=reports/junit/junit.xml --html=reports/junit/report.html --cov-report term-missing --cov=./odsclient -v odsclient/tests/
# now done in a dedicated script to capture exit code 1 and transform it to 0
  - chmod a+x ./ci_tools/run_tests.sh
  - sh ./ci_tools/run_tests.sh
  - python ci_tools/generate-junit-badge.py 100  # generates the badge for the test results and fail build if less than x%

after_success:
# ***reporting***
#  - junit2html junit.xml testrun.html  output is really not nice
  - ant -f ci_tools/generate-junit-html.xml  # generates the html for the test results. Actually we dont use it anymore
  - codecov
  # - pylint odsclient  # note that at the moment the report is simply lost, we dont transform the result into anything
# ***documentation***
  - mkdocs build -f docs/mkdocs.yml
  - mv reports/junit docs/  # not in site/ anymore so that we do not need to use --dirty (it breaks client-side search)
  # mkdocs gh-deploy requires special care :
  # ---grant the possibility to push on the repo---
  - openssl aes-256-cbc -K $encrypted_52a9af4036f4_key -iv $encrypted_52a9af4036f4_iv -in ci_tools/github_travis_rsa.enc -out ci_tools/github_travis_rsa -d
  # If the output file does not exist, that is because the secret is invalid. This can happen in forked repos so do not fail the build
  - |
    if [ -s "ci_tools/github_travis_rsa" ]; then
      chmod 600 ci_tools/github_travis_rsa
      eval `ssh-agent -s`  # launch the authentication agent
      ssh-add ci_tools/github_travis_rsa  # register the decrypted key
      git config user.name "Automatic Publish"
      git config user.email "sylvain.marie@schneider-electric.com"
      git remote add gh-remote "${GH_REF}";
      git fetch gh-remote && git fetch gh-remote gh-pages:gh-pages;  # make sure we have the latest gh-remote
      # push but only if this is not a build triggered by a pull request
      # note: do not use the --dirty flag as it breaks client-side search
      if [ "${TRAVIS_PULL_REQUEST}" = "false" ] && [ "${TRAVIS_PYTHON_VERSION}" = "3.5" ]; then echo "Pushing to github"; PYTHONPATH=odsclient/ mkdocs gh-deploy -v -f docs/mkdocs.yml --remote-name gh-remote; git push gh-remote gh-pages; fi;
    else
      echo "File 'ci_tools/github_travis_rsa' has not been created, please check your encrypted repo token in .travis.yml, on the line starting with 'openssl aes-256-cbc...'"
    fi
  # -- create the _version.py file
  - python ci_tools/write_version.py ./odsclient

deploy:
  # Deploy on PyPI on tags
  - provider: pypi
    user: "smarie"
    password:
      secure: "7h0Z7UNxfm0nkbmjCH5/9L2xwH6Kz1yMcQAYitTBZ0JyVtBiMMfGfYwEpzdjv91Pg5Cy7t4/1qoNH3M5bNV90BneYPkbLM2/NIW4AHj4D6vlp2FlcOukOCihE8WQXCMiFHpzn4XHHi0yD2FN5cjGeTVs3U2/cqwDi7hCaBwAx+5+cOjQZJm992T6px1fd0qqHtbOUXf0Xh42rpuubrfqdiYEIerNsfSvpVwxTS8bb/S1n3SYzpLwp8j1qQDWlO7W801611Ggr6aDZyV+r4f6HAWBaTzDKXm/Qhg7GCL36PckP1FNgTeKHuUhuIwABTRPxYQi43L62b32vCpuyPnjKbgHiUhpOrtoYyIQa4kNAmSIvXKpLammtTqUHoKv1Jd91B45obw/cvZ/drAXDBh7XtsiWne6C7Fv4rNV2fHjfJFvXI+vEBC4pAucfICeA1Opo7OPzXfwJAVoeYYrbpMNny5dJEpjULlGuj6N6oTn6gHJ/qmEzkpylIJLvKFxBg6VDAPIebG2UOlr91tLUhlqbRWcfzYZQ3S02lI2NLSVlvxylMi43GZ48nkh2EEQC1olqpwr4kRfdn7e7OzdCmCg6ClNi0km3cP0rUbYbNUIs7NBWWfZ95UURzj4BQ+mmnLDaSa2x19ZT6m2CovvwKr3cKnnOOGi9sqDQuSzOUJAmLY="
    on:
      tags: true
      python: 3.5  #only one of the builds have to be deployed
    # server: https://test.pypi.org/legacy/
    distributions: "sdist bdist_wheel"

  # Create a github release on tags
  - provider: script
    script: python ci_tools/github_release.py -s $GITHUB_TOKEN --repo-slug smarie/python-odsclient -cf ./docs/changelog.md -d https://smarie.github.io/python-odsclient/changelog/ $TRAVIS_TAG
    skip_cleanup: true
    on:
      tags: true
      python: 3.5  #only one of the builds have to be deployed

notifications:
  email:
    on_success: never  # options: [always|never|change] default: always
